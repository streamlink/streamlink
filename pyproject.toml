[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools >=64",
  "wheel",
  "versioningit >=2.0.0, <3",
]


# https://peps.python.org/pep-0621/
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
[project]
name = "streamlink"
description = """\
Streamlink is a command-line utility that extracts streams from various services and pipes them into a video player of choice.\
"""
readme = "README.md"
license = { text = "Simplified BSD" }
authors = [
  { name = "Streamlink" },
  { email = "streamlink@protonmail.com" }
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: BSD License",
  "Environment :: Console",
  "Intended Audience :: End Users/Desktop",
  "Operating System :: POSIX",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Multimedia :: Sound/Audio",
  "Topic :: Multimedia :: Video",
  "Topic :: Utilities",
]

dynamic = [
  "version",
  "entry-points",
]

requires-python = ">=3.8"
dependencies = [
  "certifi",
  "isodate",
  "lxml >=4.6.4,<6",
  "pycountry",
  "pycryptodome >=3.4.3,<4",
  "PySocks >=1.5.6,!=1.5.7",
  "requests >=2.26.0,<3",
  "trio >=0.22.0,<1",
  "trio-websocket >=0.9.0,<1",
  "typing-extensions >=4.0.0",
  "urllib3 >=1.26.0,<3",
  "websocket-client >=1.2.1,<2",
]

[project.urls]
Homepage = "https://github.com/streamlink/streamlink"
Documentation = "https://streamlink.github.io/"
Tracker = "https://github.com/streamlink/streamlink/issues"
Source = "https://github.com/streamlink/streamlink"
Funding = "https://streamlink.github.io/latest/donate.html"


# https://setuptools.pypa.io/en/stable/userguide/pyproject_config.html
# https://setuptools.pypa.io/en/stable/userguide/package_discovery.html
# https://setuptools.pypa.io/en/stable/userguide/datafiles.html
[tool.setuptools]
license-files = ["LICENSE"]

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools.package-data]
streamlink = [
  "py.typed",
]


# https://versioningit.readthedocs.io/en/stable/index.html
[tool.versioningit]
default-version = "0.0.0+unknown"

[tool.versioningit.vcs]
method = "git"

[tool.versioningit.format]
distance = "{base_version}+{distance}.{vcs}{rev}"
dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
distance-dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"

[tool.versioningit.next-version]
method = "null"

[tool.versioningit.onbuild]
source-file = "src/streamlink/_version.py"
build-file = "streamlink/_version.py"


# https://docs.pytest.org/en/latest/reference/customize.html#configuration
# https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
[tool.pytest.ini_options]
filterwarnings = [
  "always",
  "ignore:::pkg_resources",
  "ignore::DeprecationWarning:pycountry",
]


# https://coverage.readthedocs.io/en/latest/config.html
[tool.coverage.run]
branch = true
source = [
  "src",
  "tests",
]

[tool.coverage.report]
omit = [
  "src/streamlink/packages/*",
  "src/streamlink/webbrowser/cdp/devtools/*",
  "src/streamlink_cli/packages/*",
]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise NotImplementedError",
  "if __name__ == \"__main__\":",
  "if (?:typing\\.)?TYPE_CHECKING:",
]


# https://beta.ruff.rs/docs/configuration/
[tool.ruff]
src = ["src", "tests"]
target-version = "py38"
fix = false
ignore-init-module-imports = true
line-length = 128
show-source = true
format = "grouped"
select = [
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pylint
  "PLC",
  "PLE",
  "PLW",
  # isort
  "I",
  # flake8-builtins
  "A",
  # flake8-bugbear
  "B",
  # flake8-commas
  "COM",
  # flake8-comprehensions
  "C4",
  # flake8-datetimez
  "DTZ",
  # flake8-implicit-str-concat
  "ISC",
  # flake8-pie
  "PIE",
  # flake8-pytest-style
  "PT",
  # flake8-quotes
  "Q",
  # flake8-tidy-imports
  "TID",
  # explicitly select rules under the nursery-flag introduced in ruff 0.0.269
  # remove once enabled via the "E" selector
  "E111", "E112", "E113", "E114", "E115", "E116", "E117",
  "E201", "E202", "E203", "E211", "E221", "E222", "E223",
  "E224", "E225", "E226", "E227", "E228", "E231", "E251",
  "E252", "E261", "E262", "E265", "E266", "E271", "E272",
  "E273", "E274", "E275",
]
extend-ignore = [
  "A003",  # builtin-attribute-shadowing
  "C408",  # unnecessary-collection-call
  "ISC003",  # explicit-string-concatenation
  "PLC1901",  # compare-to-empty-string
  "PLW2901",  # redefined-loop-name
]
extend-exclude = [
  "docs/conf.py",
  "src/streamlink/packages/",
  "src/streamlink_cli/packages/",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"src/streamlink/__init__.py" = ["I"]
"src/streamlink/_version.py" = ["I"]
"src/streamlink/plugin/api/useragents.py" = ["E501"]
"src/streamlink/webbrowser/cdp/devtools/*" = ["E501"]
"src/streamlink_cli/main.py" = ["PLW0603"]

[tool.ruff.isort]
known-first-party = ["streamlink", "streamlink_cli"]
lines-after-imports = 2
combine-as-imports = true

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.flake8-quotes]
avoid-escape = false

[tool.ruff.flake8-implicit-str-concat]
allow-multiline = false


# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
python_version = 3.8
show_error_codes = true
show_error_context = true
show_column_numbers = true
warn_no_return = false
files = [
  "src/streamlink/",
  "src/streamlink_cli/",
  "tests/",
  "setup.py",
]
